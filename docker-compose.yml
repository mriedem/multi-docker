version: '3'
services:
  postgres:
    image: 'postgres:latest'
  redis:
    image: 'redis:latest'
  nginx:  # api router/proxy
    restart: always  # no matter what we want this running
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      # External calls will hit 3050 and be routed in nginx internally to
      # the client (3000) or server (5000).
      - '3050:80'
  api:  # node.js express server container (formerly called "server")
    build:
      dockerfile: Dockerfile.dev
      context: ./server
    # Map volumes into the container so we can make changes in the local
    # server source code and have them automatically reflected in the running
    # container without having to rebuild the container image.
    volumes:
      - /app/node_modules  # this won't change
      - ./server:/app  # changes from .server (except node_modules) go in /app
    environment:
      # Tip: get the information on the default values from the docker hub
      # docs for these images. The keys come from ./server/keys.js.
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
    depends_on:
      - postgres
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app  # share everything in the client dir with /app in container
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app  # same as above
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379